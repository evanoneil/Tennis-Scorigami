setwd("~/Library/CloudStorage/Dropbox/In Progress/_MICA DAV/3 - Exploring Data/Final Project/_Summary Outline")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(DT) # An interactive table
library(plotly) # An easy way to do interactive plots
datatable(select(titanicSubset.df, name, age fare, SibSpouseCnt, survived), pageLength = 10, autowidth = TRUE, columnDefs = list(list(className = 'dt-center', targets = 4:5)))
datatable(
select(titanicSubset.df, name, age, fare, SibSpouseCnt, survived),
filter = 'top',
options = list(pageLength = 10, autowidth = TRUE,
columnDefs = list(list(className = 'dt-center', targets = 4:5)))
)
ggplotly(titanicSubsetStatic.gg)
# Code to load data
url <- "https://public.tableau.com/app/sample-data/titanic%20passenger%20list.csv"
if (!file.exists("./TitanicPassengerList.csv"))
download.file(url, destfile = "./TitanicPassengerList.csv")
titanicData.df <- read.csv("./TitanicPassengerList.csv")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(DT) # An interactive table
library(plotly) # An easy way to do interactive plots
titanicSubsetInteractiveLabels.gg <- titanicSubset.df %>% aes(x=age, y=fare, color=SibSpouseCnt)
# ...
ggplotly(titanicSubsetInteractiveLabels.gg, ...)
titanicSubsetInteractiveLabels.gg <- titanicSubset.df %>% aes(x=age, y=fare, color=SibSpouseCnt)
ggplotly(titanicSubsetInteractiveLabels.gg, ...)
titanicSubsetInteractiveLabels.gg <- titanicSubset.df %>%
ggplot(aes(x=age, y=fare, color=SibSpouseCnt, text = paste(“Name:”, name, “\n”, “Survived:”, if_else(survived==1, “Yes”, “No”)))) +
titanicSubsetInteractiveLabels.gg <- titanicSubset.df %>%
ggplot(aes(x=age, y=fare, color=SibSpouseCnt, text = paste("Name:", name, "\n", "Survived:", if_else(survived==1, "Yes", "No")))) +
geom_point() +
labs(title = "Fare vs. Age",
subtitle = "Only passengers with number of siblings or spouses > 3",
x = "Passenger Age", y = "Passenger Fare",
color = "Siblings\nor Spouses",
caption = "Part 2: Static Chart") +
scale_color_discrete(name="Siblings\nor Spouses") +
theme_bw()
titanicSubsetInteractiveLabels.gg
titanicSubsetInteractiveLabels.gg <- titanicSubset.df %>%
ggplot(aes(x=age, y=fare, color=SibSpouseCnt, text = paste("Name:", name, "\n", "Survived:", if_else(survived==1, "Yes", "No")))) +
geom_point() +
labs(title = "Fare vs. Age",
subtitle = "Only passengers with number of siblings or spouses > 3",
x = "Passenger Age", y = "Passenger Fare",
color = "Siblings\nor Spouses",
caption = "Part 2: Static Chart") +
scale_color_discrete(name="Siblings\nor Spouses") +
theme_bw()
titanicShowAllPoints.gg <- titanicSubset.df %>% group_by(SibSpouseCnt) %>% summarise(n=n())
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(DT) # An interactive table
library(plotly) # An easy way to do interactive plots
library(ggpointdensity)
titanicShowAllPoints.gg <- titanicSubset.df %>% group_by(SibSpouseCnt) %>% summarise(n=n()) %>%
ggplot(aes(x=age, y=fare, color=SibSpouseCnt, text = paste("Name:", name, "\n", "Survived:", if_else(survived==1, "Yes", "No")))) +
geom_pointdensity() +
labs(title = "Fare vs. Age",
subtitle = "Only passengers with number of siblings or spouses > 3",
x = "Passenger Age", y = "Passenger Fare",
color = "Siblings\nor Spouses",
caption = "Part 4: Interactive Extra Chart") +
scale_color_discrete(name="Siblings\nor Spouses") +
theme_bw()
titanicShowAllPoints.gg <- titanicSubset.df %>% group_by(SibSpouseCnt) %>% summarise(n=n()) %>%
ggplot(aes(x=age, y=fare, color=SibSpouseCnt, text = paste("Name:", name, "\n", "Survived:", if_else(survived==1, "Yes", "No")))) +
geom_pointdensity() +
labs(title = "Fare vs. Age",
subtitle = "Only passengers with number of siblings or spouses > 3",
x = "Passenger Age", y = "Passenger Fare",
color = "Siblings\nor Spouses",
caption = "Part 4: Interactive Extra Chart") +
scale_color_discrete(name="Siblings\nor Spouses") +
theme_bw()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(DT) # An interactive table
library(plotly) # An easy way to do interactive plots
library(ggpointdensity)
# Code to load data
url <- "https://public.tableau.com/app/sample-data/titanic%20passenger%20list.csv"
if (!file.exists("./TitanicPassengerList.csv"))
download.file(url, destfile = "./TitanicPassengerList.csv")
titanicData.df <- read.csv("./TitanicPassengerList.csv")
# Create a variable for sibsp as a  factor
titanicData.df <- titanicData.df %>% mutate(SibSpouseCnt = as.factor(sibsp))
# Create a subset of the data
titanicSubset.df <- titanicData.df %>% filter(sibsp > 3, !is.na(age))
# Create a scatterplot
titanicSubsetStatic.gg <- titanicSubset.df %>%
ggplot(aes(x=age, y=fare, color=SibSpouseCnt)) +
geom_point() +
labs(title = "Fare vs. Age",
subtitle = "Only passengers with number of siblings or spouses > 3",
x = "Passenger Age", y = "Passenger Fare",
color = "Siblings\nor Spouses",
caption = "Part 2: Static Chart") +
scale_color_discrete(name="Siblings\nor Spouses") +
theme_bw()
titanicSubsetStatic.gg
datatable(
select(titanicSubset.df, name, age, fare, SibSpouseCnt, survived),
filter = 'top',
options = list(pageLength = 10, autowidth = TRUE,
columnDefs = list(list(className = 'dt-center', targets = 4:5)))
)
ggplotly(titanicSubsetStatic.gg)
titanicSubsetInteractiveLabels.gg <- titanicSubset.df %>%
ggplot(aes(x=age, y=fare, color=SibSpouseCnt, text = paste("Name:", name, "\n", "Survived:", if_else(survived==1, "Yes", "No")))) +
geom_point() +
labs(title = "Fare vs. Age",
subtitle = "Only passengers with number of siblings or spouses > 3",
x = "Passenger Age", y = "Passenger Fare",
color = "Siblings\nor Spouses",
caption = "Part 3: Interactive Chart") +
scale_color_discrete(name="Siblings\nor Spouses") +
theme_bw()
ggplotly(titanicSubsetInteractiveLabels.gg, tooltip = "text")
titanicShowAllPoints.gg <- titanicSubset.df %>% group_by(SibSpouseCnt) %>% summarise(n=n()) %>%
ggplot(aes(x=age, y=fare, color=SibSpouseCnt, text = paste("Name:", name, "\n", "Survived:", if_else(survived==1, "Yes", "No")))) +
geom_pointdensity() +
labs(title = "Fare vs. Age",
subtitle = "Only passengers with number of siblings or spouses > 3",
x = "Passenger Age", y = "Passenger Fare",
color = "Siblings\nor Spouses",
caption = "Part 4: Interactive Extra Chart") +
scale_color_discrete(name="Siblings\nor Spouses") +
theme_bw()
ggplotly(titanicSubsetInteractiveLabels.gg, tooltip = "text")
titanicShowAllPoints.gg <- titanicSubset.df %>%
ggplot(aes(x=age, y=fare, color=SibSpouseCnt,
text = paste("Name:", name, "\n", "Survived:", if_else(survived==1, "Yes", "No")))) +
geom_jitter() +
labs(title = "Fare vs. Age",
subtitle = "Only passengers with number of siblings or spouses > 3",
x = "Passenger Age", y = "Passenger Fare",
color = "Siblings\nor Spouses",
caption = "Part 6: Show All Points") +
scale_color_discrete(name="Siblings\nor Spouses") +
theme_bw()
ggplotly(titanicShowAllPoints.gg, tooltip = "text")
titanicSubsetSurvived.gg <- titanicSubset.df %>%
ggplot(aes(x=age, y=fare, color=SibSpouseCnt, shape=as.factor(survived),
text = paste("Name:", name, "\n", "Survived:", if_else(survived==1, "Yes", "No")))) +
geom_jitter() +
labs(title = "Fare vs. Age",
subtitle = "Only passengers with number of siblings or spouses > 3",
x = "Passenger Age", y = "Passenger Fare",
color = "Siblings\nor Spouses",
caption = "Part 7: Show Survivors") +
scale_color_discrete(name="Siblings\nor Spouses") +
scale_shape_manual(values = c(4, 16), name="Survived", labels=c("No", "Yes")) +
theme_bw()
ggplotly(titanicSubsetSurvived.gg, tooltip = "text")
